<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on correlation.zone</title>
    <link>https://correlation.zone/posts/</link>
    <description>Recent content in Posts on correlation.zone</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Sat, 06 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://correlation.zone/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The pipeline problem, tech boot camps, food stamps, and mutual aid</title>
      <link>https://correlation.zone/posts/mutual-learning/</link>
      <pubDate>Sat, 06 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://correlation.zone/posts/mutual-learning/</guid>
      <description>D&amp;amp;I focussed measures for teaching technical skills fail to provide students with the skills needed to challenge the prevailing silicon valley orthodoxy. Here I suggest can be mitigated by adopting a model of mutual aid for new and existing tech workers, with personal agency centred throughout.</description>
    </item>
    
    <item>
      <title>Graphcore: headerless packets and the perfect NOC</title>
      <link>https://correlation.zone/posts/graphcorenoc/</link>
      <pubDate>Sat, 25 Jan 2020 08:07:40 -0700</pubDate>
      
      <guid>https://correlation.zone/posts/graphcorenoc/</guid>
      <description>Network on chip (NoC) designs have been relatively isolated from the software that runs using them, treated as an implementation detail while the instruction set and memory model are exposed to the programmer. Graphcore has totally exposed the NoC to the program, and in doing so routes packets without headers.</description>
    </item>
    
    <item>
      <title>10G Network Router in Haskell</title>
      <link>https://correlation.zone/posts/10g-network-router-in-haskell/</link>
      <pubDate>Mon, 14 Jan 2019 08:07:40 -0700</pubDate>
      
      <guid>https://correlation.zone/posts/10g-network-router-in-haskell/</guid>
      <description>As part of Noa Z&amp;rsquo;s course, we modified the NetFPGA SUME reference design to support cut-through low latency switching at 10G line rate.
As part of this project a new output port lookup module was written in CλaSH, a Haskell derived DSL compiling to Verilog. The pipelined design was exceptionally succinct when compared to the reference Verilog design.
The document is a literate haskell walk-through of the OPL module, for use as a building block for other pipelined systems.</description>
    </item>
    
    <item>
      <title>FPGA Quantum Simulation</title>
      <link>https://correlation.zone/posts/fpga-quantum-simulation/</link>
      <pubDate>Mon, 14 Jan 2019 08:06:15 -0700</pubDate>
      
      <guid>https://correlation.zone/posts/fpga-quantum-simulation/</guid>
      <description>A high performance quantum circuit simulator in CλaSH Introduction For my master&amp;rsquo;s project, I aimed to develop a FPGA based quantum simulator with the objective of running &amp;gt;30 qubits at reasonable depth on a single Amazon F1 instance. Whilst the full-scale tests never happened, a tested general simulator was produced and was validated at 16 qubits on Zynq hardware. This series of blog posts will describe the simulation method and the use of CλaSH as a tool for rapid development of hardware networks.</description>
    </item>
    
    <item>
      <title>My First Post</title>
      <link>https://correlation.zone/posts/my-first-post/</link>
      <pubDate>Mon, 14 Jan 2019 07:51:28 -0700</pubDate>
      
      <guid>https://correlation.zone/posts/my-first-post/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>